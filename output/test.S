// random assembly code generated by RISC-V torture test generator
// nseqs = 100
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	or x23, x22, x12
	addi x29, x12, 0
	la x14, test_memory+40
	la x7, test_memory-1703
	la x8, test_memory+640
	addi x30, x0, -371
	addi x27, x0, -396
	la x28, test_memory+706
	addi x18, x29, 0
	addi x16, x0, -1416
	amoand.d x24, x5, 0(x14)
	mulhu x6, x8, x8
	mul x3, x27, x17
	mulw x4, x30, x16
	addi x22, x0, 1
	la x11, test_memory+312
	amoadd.d x21, x9, 0(x8)
	la x1, test_memory+1284
	addi x19, x0, 1
	addi x24, x0, 1
	sraw x20, x27, x27
	la x10, test_memory+19
	amoor.d x13, x0, 0(x11)
	remw x31, x6, x6
	sll x24, x24, 63
	sll x19, x19, 63
	sll x22, x22, 63
	addi x14, x0, -1
	sd x13, -562(x28)
	lh x25, 1849(x7)
	xor x14, x14, x24
	addi x26, x0, -1
	xor x26, x26, x19
	addi x9, x0, -1
	and x15, x31, x26
	xor x9, x9, x22
	sh x19, 953(x10)
	and x5, x5, x9
	or x2, x15, x19
	bge x2, x15, crash_forward
	or x17, x5, x22
	lb x12, -316(x1)
	and x21, x22, x14
	or x18, x8, x24
	blt x21, x18, crash_backward
	la x21, test_memory+256
	rem x22, x9, x26
	xor x26, x18, x29
	la x23, test_memory+657
	addi x11, x11, 0
	addi x2, x0, 1
	la x1, xreg_output_data
	amoswap.d x15, x22, 0(x21)
	addi x31, x11, 0
	bltu x11, x31, crash_backward
	sw x2, 0(x1)
	sb x31, 359(x23)
	ecall 
	addi x16, x0, -2021
	addi x4, x0, -1016
	addw x24, x16, x4
	addi x20, x0, 1
	addi x4, x0, 1
	la x1, xreg_output_data
	addi x17, x0, 1924
	sw x4, 0(x1)
	sll x20, x20, 63
	addi x12, x0, -1
	mul x11, x17, x17
	ecall 
	xor x12, x12, x20
	and x28, x18, x12
	or x6, x28, x20
	bge x6, x28, crash_forward
	addi x10, x0, 1
	la x3, test_memory+792
	amomin.d x15, x2, 0(x3)
	la x26, test_memory+887
	addi x8, x0, -1286
	lhu x23, 57(x26)
	addi x21, x0, 1029
	div x19, x8, x21
	la x1, xreg_output_data
	sw x10, 0(x1)
	ecall 
	addi x13, x0, 1
	la x1, xreg_output_data
	sw x13, 0(x1)
	ecall 
	addi x19, x0, 1
	la x1, xreg_output_data
	sw x19, 0(x1)
	ecall 
	addi x29, x0, 1
	la x1, xreg_output_data
	sw x29, 0(x1)
	ecall 
	addi x4, x0, 1
	la x1, xreg_output_data
	sw x4, 0(x1)
	ecall 
	addi x14, x0, 1
	addi x28, x0, 884
	mulhu x22, x31, x29
	la x11, test_memory+2717
	addi x7, x0, 1
	addi x25, x0, -1377
	rem x10, x28, x25
	la x1, xreg_output_data
	sw x14, 0(x1)
	sll x7, x7, 63
	sb x5, -1937(x11)
	addi x3, x0, -1
	ecall 
	xor x3, x3, x7
	and x5, x19, x3
	addi x18, x0, 1
	or x26, x19, x7
	la x1, xreg_output_data
	blt x5, x26, crash_forward
	sw x18, 0(x1)
	ecall 
	addi x8, x0, 1
	la x1, xreg_output_data
	addi x13, x0, 84
	srlw x21, x13, x13
	sw x8, 0(x1)
	la x20, test_memory+508
	la x25, test_memory+432
	amoor.w x2, x29, 0(x20)
	amoswap.d x6, x6, 0(x25)
	ecall 
	addi x29, x0, 1
	la x1, xreg_output_data
	sw x29, 0(x1)
	ecall 
	addi x9, x0, 1
	la x20, test_memory+768
	addi x6, x0, 1
	addi x27, x0, -143
	sll x6, x6, 63
	la x23, test_memory-1501
	amoadd.w x24, x22, 0(x20)
	la x5, test_memory-1668
	la x1, xreg_output_data
	la x10, test_memory+2085
	sb x6, 1676(x23)
	lbu x31, -1450(x10)
	la x18, test_memory+1575
	addi x16, x0, -1
	xor x16, x16, x6
	sw x9, 0(x1)
	mulhsu x15, x27, x27
	addi x30, x0, -642
	ld x22, 1764(x5)
	sw x14, -1479(x18)
	and x21, x29, x16
	remu x28, x30, x30
	or x3, x4, x6
	ecall 
	addi x14, x0, 1
	la x1, xreg_output_data
	sw x14, 0(x1)
	ecall 
	addi x29, x0, 1
	la x1, xreg_output_data
	sw x29, 0(x1)
	ecall 
	addi x4, x0, 1
	la x1, xreg_output_data
	sw x4, 0(x1)
	ecall 
	addi x10, x0, 1
	srai x12, x3, 51
	la x17, test_memory+920
	sll x10, x10, 63
	addi x24, x0, -1
	addi x9, x0, 0
	addi x22, x0, 0
	addi x8, x31, 0
	xor x24, x24, x10
	addi x11, x0, 0
	la x19, test_memory+642
	addi x15, x0, 1
	la x6, test_memory+464
	lwu x31, -462(x19)
	addi x28, x0, 0
	addi x23, x8, 0
	and x18, x14, x24
	addi x5, x0, 1
	la x16, test_memory+148
	addi x21, x0, 0
	bltu x11, x21, crash_backward
	addi x2, x0, 0
	sll x15, x15, 63
	amomax.d x25, x12, 0(x6)
	amoadd.w x29, x24, 0(x16)
	sb x12, -205(x17)
	la x1, xreg_output_data
	bltu x28, x2, crash_backward
	sw x5, 0(x1)
	ecall 
	bne x9, x22, crash_backward
	addi x4, x0, -1
	or x7, x3, x10
	addi x30, x0, 1
	addi x28, x0, 1
	addi x25, x0, 0
	sll x28, x28, 63
	xor x4, x4, x15
	addi x9, x0, 1
	addi x16, x0, 0
	addi x12, x0, -1
	sll x30, x30, 63
	xor x12, x12, x28
	and x2, x4, x12
	la x1, xreg_output_data
	addi x5, x0, 1747
	addi x13, x0, -1
	and x26, x19, x4
	xor x13, x13, x30
	and x27, x15, x13
	div x11, x5, x5
	sw x9, 0(x1)
	or x20, x26, x15
	or x3, x27, x30
	ecall 
	beq x27, x3, crash_forward
	or x21, x2, x28
	blt x2, x21, crash_backward
	la x20, test_memory+812
	addi x3, x0, 1476
	amomin.w x9, x0, 0(x20)
	blt x26, x26, crash_forward
	addi x6, x3, 686
	addi x25, x0, 665
	addi x4, x25, 633
	addi x17, x0, 1
	la x1, xreg_output_data
	sw x17, 0(x1)
	ecall 
	addi x18, x0, 1773
	addi x15, x18, 99
	addi x24, x0, 1
	bltu x15, x18, crash_forward
	la x7, test_memory-1506
	lh x16, 2040(x7)
	la x1, xreg_output_data
	sw x24, 0(x1)
	ecall 
	addi x12, x0, 356
	addi x21, x12, 1422
	addi x20, x0, 1
	la x1, xreg_output_data
	sw x20, 0(x1)
	ecall 
	srl x18, x30, x26
	la x17, test_memory+736
	amomin.w x22, x22, 0(x17)
	sra x22, x31, x31
	addi x16, x0, 1
	la x1, xreg_output_data
	la x2, test_memory+2549
	la x24, test_memory+1569
	lhu x7, -1679(x2)
	sw x16, 0(x1)
	sb x3, -699(x24)
	divu x30, x31, x16
	ecall 
	bne x25, x25, crash_backward
	addi x27, x0, -214
	addi x7, x0, 434
	addi x23, x0, 1
	addi x14, x0, 1
	addi x19, x0, 0
	addi x26, x0, 1
	sll x26, x26, 63
	addi x3, x0, -1
	addi x29, x0, -1643
	la x1, xreg_output_data
	la x13, test_memory+221
	sll x14, x14, 63
	lh x18, -77(x13)
	addi x24, x0, 0
	addi x15, x7, 1865
	sw x23, 0(x1)
	ecall 
	addi x30, x0, -1
	blt x15, x7, crash_backward
	or x12, x27, x29
	xor x30, x30, x14
	xor x3, x3, x26
	and x6, x7, x3
	or x28, x10, x26
	addi x11, x0, 1
	la x1, xreg_output_data
	and x25, x8, x30
	sw x11, 0(x1)
	or x8, x6, x14
	beq x25, x8, crash_forward
	ecall 
	addi x17, x0, 1
	la x1, xreg_output_data
	sw x17, 0(x1)
	ecall 
	addi x4, x0, 1
	la x1, xreg_output_data
	sw x4, 0(x1)
	ecall 
	j reg_dump

reg_dump:
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0bf1077ee0eb4f23
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0xf1faca7b0d7977ed
reg_x3_init:	.dword 0xa3b09d9fab9abc42
reg_x4_init:	.dword 0xffffffffffffff80
reg_x5_init:	.dword 0x3f465d114eb6ae99
reg_x6_init:	.dword 0x29db5d01a9d003ff
reg_x7_init:	.dword 0x0800000000000004
reg_x8_init:	.dword 0x9c4aeed1ffea91d6
reg_x9_init:	.dword 0x0800000000000006
reg_x10_init:	.dword 0x0000000000000001
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x64238e7e35c51edb
reg_x13_init:	.dword 0xffffffffffffffdf
reg_x14_init:	.dword 0x8a660a758b34b752
reg_x15_init:	.dword 0xa59d6618ca852229
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0xffffffffffff8008
reg_x18_init:	.dword 0xfffffffffffffffd
reg_x19_init:	.dword 0xebc3f8909d6c544f
reg_x20_init:	.dword 0xd6945c5280c1c10e
reg_x21_init:	.dword 0xc974a12e6dc43c26
reg_x22_init:	.dword 0x0000000000000007
reg_x23_init:	.dword 0xc8dfe77a41074fb8
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0x7f8787a7d27c2cf6
reg_x27_init:	.dword 0xffffffff80000004
reg_x28_init:	.dword 0x5767c6a6f29583ac
reg_x29_init:	.dword 0xc968f616895db761
reg_x30_init:	.dword 0xc50f9a794a9ec664
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xe3617c87c71db39b
reg_x1_output:	.dword 0xdf2e1c1d6d4cb7a5
reg_x2_output:	.dword 0x4282b43b33d536b6
reg_x3_output:	.dword 0x470778ec51f664ee
reg_x4_output:	.dword 0x59a39b6f37428791
reg_x5_output:	.dword 0xabedb367ba90ee81
reg_x6_output:	.dword 0xe21eca110107ce18
reg_x7_output:	.dword 0x014de1d6a29567c5
reg_x8_output:	.dword 0x0ba29f0222038cdb
reg_x9_output:	.dword 0xf88f2a5c71c0866a
reg_x10_output:	.dword 0x85a494f62ae09e25
reg_x11_output:	.dword 0x88317c779c84379a
reg_x12_output:	.dword 0x7fba819f6e006e4d
reg_x13_output:	.dword 0x8a5fded342e0d46f
reg_x14_output:	.dword 0x64262308de1e074b
reg_x15_output:	.dword 0x0933553c4738a9a4
reg_x16_output:	.dword 0xcdc19f4721ddc18d
reg_x17_output:	.dword 0x872fa2ee50a7c68e
reg_x18_output:	.dword 0xcc41da4f2366ae0b
reg_x19_output:	.dword 0x1b536d148695474c
reg_x20_output:	.dword 0xc9adc6220f600d99
reg_x21_output:	.dword 0x95a9818fdcd28e3d
reg_x22_output:	.dword 0x9038112ee17e697b
reg_x23_output:	.dword 0x1be145f683f020b2
reg_x24_output:	.dword 0xea9ad6f91b71213e
reg_x25_output:	.dword 0x115092de77b71ae4
reg_x26_output:	.dword 0xe8eb36f6feba81c5
reg_x27_output:	.dword 0x7b217f5b61316f28
reg_x28_output:	.dword 0xe2d4f5b9d809b9a1
reg_x29_output:	.dword 0xfc92e0c4b19a6460
reg_x30_output:	.dword 0x2c8c8c556c4f3ea6
reg_x31_output:	.dword 0x985a82be533407b4

// Memory Blocks
	.align 8
test_memory:
	.dword 0x0fc849f80a3978ba, 0x77a45b73d3958582
	.dword 0xcbf76bdddf50c5f0, 0x6d1a4022fbd19d92
	.dword 0x22f84f6903c72bd4, 0xe713dddd5513a68e
	.dword 0xa7fd2289dc814a08, 0xafc6fa8cbf44d4b0
	.dword 0xa760b6666d23620f, 0xa14c42389a32b7bd
	.dword 0xf623583585468868, 0x45cd2485dbcb2431
	.dword 0x50e1d46e39a752de, 0xee7386810690fbbb
	.dword 0x9a9708214560981e, 0xd5fc4c9c3db088eb
	.dword 0x559aa4a3055a148a, 0x625a00f497516229
	.dword 0x1356096f1a3c084c, 0x0be519de652f07e9
	.dword 0x6b52584b08b622ac, 0x1c6ba4990660b21c
	.dword 0xced127a8adf94ea6, 0xa54a586336cc00e9
	.dword 0x65537750242934b7, 0x45d555b2f045849c
	.dword 0x0e88cb3ae98385f7, 0xb2f715c33a1d50de
	.dword 0xd95a90c14248646c, 0x3a504e4e95050f26
	.dword 0x446631f4f2507c9c, 0x8e8bcd9b9e20446f
	.dword 0xa47a7b4f74f2a463, 0x244592ba93e6be2b
	.dword 0x2fd3378ac1a41307, 0xe714a60e558c5a77
	.dword 0xa31825d0bedb8689, 0x793b760b71209f8f
	.dword 0xddd2ae14a470ea3d, 0xee7abc3ec0cbd683
	.dword 0x715ff7c07038529c, 0xafbf2e95cbb69d2a
	.dword 0x159b468efc306259, 0x222280d8a6842357
	.dword 0x93d6c1bb5a896cb1, 0xbc3c7a76e916874a
	.dword 0xa97709598a4be907, 0x61492486aed80569
	.dword 0xf9e83e04e4ba0baf, 0x5e75540ca33aef30
	.dword 0x99e95eb968f19809, 0x03f3147b30cd9d64
	.dword 0x6695210236103fd2, 0x0d8bb67ad55ed18e
	.dword 0xf75da754956e23b6, 0x6d7d86eae4823aa7
	.dword 0xeda2b9bd43a74928, 0x5ccf72291a8c110f
	.dword 0xf4e064b999661976, 0x2625178ef815fdc4
	.dword 0x5dee2264896e3e17, 0x07c21141108ec0cf
	.dword 0xaca4f1d871886e47, 0xdf13742518794b01
	.dword 0x23c500cb9ce501d5, 0x7002cc3259173edf
	.dword 0xad59cb8249945d3b, 0xe4c618ee3a860cda
	.dword 0xe865d6e695118aef, 0x3c148e3142151ec3
	.dword 0x858d68f206cc95f8, 0x6be01d2e540ec67d
	.dword 0xf609e351786779c3, 0xf23009b35594e3f3
	.dword 0x28a5a442e331bb36, 0xd4b90faebfcd764c
	.dword 0x321a91c77e9bff05, 0xde93dcf510aa8c5d
	.dword 0x372bb2f58d1e3145, 0x7a3ae33eba5c485f
	.dword 0x51747bacf9a0123e, 0x5104c673a832eae1
	.dword 0xea6eae6e581d3c84, 0xe0e0eb2d41a218ff
	.dword 0xc4d9f887263af848, 0x416fe9751175d1d4
	.dword 0xa1beac740d176feb, 0x22e9e7cfa35cc72c
	.dword 0xbdf73e80f9ff19d3, 0xb7e1227e7bf30d7e
	.dword 0xd5c267b2d12e6b82, 0x470f230032b35718
	.dword 0x979a12e8419329e4, 0xe83f6bdb08e42e9c
	.dword 0x84a9783d6be1eae7, 0xc7529c9aeff9e4aa
	.dword 0xddff0aaf07899c51, 0xce815219d43d24de
	.dword 0x003d1c03ee5823cd, 0xedb64702691165fd
	.dword 0x2e565aeb49406c46, 0x3c4b788f5235a96a
	.dword 0x65118f625ee37477, 0xd4ee5398bc0d3dde
	.dword 0x26e23957748332c2, 0xb52b2dd09ba57957
	.dword 0xe859f591951f6241, 0xcb608f4a71089e51
	.dword 0xab50ccd105e98d1b, 0x2adf103a82bd6033
	.dword 0x9820d133e43ee818, 0x8f02cf01d355bb0c
	.dword 0xd333addae52bd376, 0xa75fc26c30e7127e
	.dword 0x1fe70ccc8a6614fc, 0x58ea6c328d70cbfa
	.dword 0xf2b6f71ac9e81f50, 0x369aafc69dd5d82d
	.dword 0xa1eb93441d28fa85, 0xf79ed1508e60dfb9
	.dword 0x4ff9e5db0891a1f8, 0xee10e0f467120728
	.dword 0xbb9d78675489eb5b, 0x47811654aa707e1d
	.dword 0x41ab0a88a4844b12, 0xc4cbe05d6e894dcb
	.dword 0x59fab163a71109bd, 0x30daad3cfc681aab

.align 8
loop_count: .word 0x1

RVTEST_DATA_END
